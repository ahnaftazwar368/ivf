import requests
import time
from bs4 import BeautifulSoup
from urllib.parse import urljoin


def find_xss_vulnerability(url, html):
    print("Searching for vulnerabilities...")
    payloads = [
        "<h1>XSS</h1>",
        "<script>alert('XSS')</script>",
        '" onmouseover="alert(\'XSS\')"'
    ]

    soup = BeautifulSoup(html, "html.parser")
    forms = soup.find_all("form")
    # forms = soup.find_all("mat-form-field")

    # print(html)
    for form in forms:
        action = form.get("action")
        method = form.get("method", "get").lower()
        inputs = form.find_all("input")

        for payload in payloads:
            # print(f"Checking payload: {payload}")

            data = {}
            for input_tag in inputs:
                input_name = input_tag.get("name")
                input_type = input_tag.get("type", "text")
                input_value = input_tag.get("value", "")

                if input_type == "text":
                    data[input_name] = payload
                else:
                    data[input_name] = input_value

            target_url = urljoin(url, action)

            if method == "post":
                response = requests.post(target_url, data=data)
            else:
                response = requests.get(target_url, params=data)

            if payload in response.text:
                if payload.startswith("<script>"):
                    print(f"Potential XSS vulnerability (JS context) found in form at {target_url}")
                else:
                    print(f"Potential XSS vulnerability (HTML context) found in form at {target_url}")
                return True

    return False
